{"version":3,"sources":["Components/ContactsForm/ContactsForm.styled.jsx","redux/selectors.js","redux/back-end.js","Components/ContactsForm/ContactsForm.jsx","Components/Filter/Filter.styled.jsx","redux/actions.js","Components/Filter/Filter.jsx","Components/ContactsList/ContactsList.styled.jsx","Components/ContactsList/ContactsList.jsx","Components/App.jsx","redux/reducers.js","redux/store.js","index.js"],"names":["MyForm","styled","form","isFilter","state","contacts","filter","getContacts","items","isLoad","loading","onFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","axios","defaults","baseURL","fetchContact","createAsyncThunk","a","pending","get","response","data","rejected","addContact","number","newContact","post","deleteContact","contactId","delete","ContactsForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","map","alert","type","onChange","pattern","title","required","PropsType","PropTypes","func","isRequired","MyLabel","label","filterContact","createAction","Filter","target","MyList","ul","ContactsList","loader","useEffect","id","className","onClick","shortid","generate","App","createReducer","fulfilled","_","action","payload","error","rootReducer","combineReducers","store","configureStore","reducer","devTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e853e1e.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nexport const MyForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n    margin-right: auto;\n  width: 310px;\n  height: 250px;\n  border: 2px solid darkgrey;\n  border-radius: 5px;\n  padding: 15px;\n  background-color: snow;\n\n label{\n\n\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.18;\n}\ninput{\n  padding: 10px;\n  border: 2px solid #00e45f;\n  border-radius: 15px;\n  font-size: 18px;\n  font-weight: 500;\n  width: 250px;\n  font-size: 14px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n}\n  button{\n    \n    margin-left: auto;\n    margin-right: auto;\n  font-size: 16px;\n  width: 150px;\n  padding: 4px;\n  border: 2px solid darkgrey;\n  border-radius: 4px;\n  background-color: darkgrey;\n  margin-top: 20px;\n  cursor: pointer;\n}\n`\n\n\n","import { createSelector } from \"reselect\";\r\n\r\nexport const isFilter = (state) => state.contacts.filter;\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const isLoad = (state) => state.contacts.loading;\r\n\r\nexport const onFilteredContacts = createSelector(\r\n  [getContacts, isFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"https://619146a141928b001768ffd0.mockapi.io/api/v1/\";\r\n\r\nexport const fetchContact = createAsyncThunk(\r\n  \"contact/fetchContact\",\r\n  async () => {\r\n    fetchContact.pending();\r\n\r\n    try {\r\n      const response = await axios.get(\"/contacts\");\r\n      return response.data;\r\n    } catch (error) {\r\n      fetchContact.rejected(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contact/addContact\",\r\n  async ({ name, number }) => {\r\n    const newContact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const response = await axios.post(\"/contacts\", newContact);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contact/deleteContact\",\r\n  async (contactId) => {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    return contactId;\r\n  }\r\n);\r\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MyForm } from \"./ContactsForm.styled\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/selectors.js';\nimport { addContact } from '../../redux/back-end';\n\nfunction ContactsForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n \n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n \n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.map(contact => contact.name).includes(name)) {\n      alert(`Sorry, but ${name} is already in contacs.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n   \n    reset();\n  };\n\n  \n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <MyForm onSubmit={handleSubmit}>\n            <label>\n             \n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n         Number\n           </label>\n\n      \n       \n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n    \n    <button type=\"submit\">Add contact</button>\n    </MyForm>\n  );\n}\n\nContactsForm.PropsType = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n\nexport default ContactsForm;\n\n","import styled from '@emotion/styled';\nexport const MyLabel = styled.label`\n\n  display: flex;\n  flex-direction: column;\n  font-family: \"Arial\";\n  font-weight: 700;\n  font-size: 15px;\n  line-height: 1.14;\n  margin-top: 15px;\n  margin-left: 20px;\n\n    input{\n      \n  width: 300px;\n  border: 4px solid #00ffe5;\n  border-radius: 15px ;\n\n  padding: 8px;\n  margin-top: 8px;\n}\n`","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactSuccess = createAction(\"contact/fetchContactSuccess\");\r\nexport const fetchContactRequest = createAction(\"contact/fetchContactRequest\");\r\nexport const fetchContactError = createAction(\"contact/fetchContactError\");\r\n\r\nexport const addContactSucess = createAction(\"contact/addContactSucess\");\r\nexport const addContactRequest = createAction(\"contact/addContactRequest\");\r\nexport const addContactError = createAction(\"contact/addContactError\");\r\n\r\nexport const filterContact = createAction(\"contacts/filterContact\");\r\n\r\nexport const deleteContactSuccess = createAction(\r\n  \"deleteContact/deleteContactSuccess\"\r\n);\r\nexport const deleteContactRequest = createAction(\r\n  \"deleteContact/deleteContactRequest\"\r\n);\r\nexport const deleteContactError = createAction(\r\n  \"deleteContact/deleteContactError\"\r\n);\r\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { MyLabel } from \"./Filter.styled\";\nimport { isFilter } from '../../redux/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/actions';\n\n\nfunction Filter () {\n  const value = useSelector(isFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <MyLabel>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={(e) => dispatch\n          (filterContact(e.target.value))}\n      />\n    </MyLabel>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport default Filter;\n","import styled from '@emotion/styled';\nexport const MyList = styled.ul`\npadding: 0;\n    .contact {\n      margin-left: 20px;\n\n  display: flex;\n  align-items: center;\n  font-size: 15px;\n  font-weight: 400;\n  line-height: 1.18;\n  margin-bottom: 8px;\n}\n.buttonDelete {\n\n\n  margin-left: 10px;\n  border: 2px solid red;\n  font-size: 13px;\n  font-weight: 700;\n  border-radius: 4px;\n  background-color: #ffae00;\n  color: black;\n  cursor: pointer;\n}\n\n`","import React from \"react\";\nimport shortid from 'shortid';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { MyList } from \"./ContactsList.styled\";\nimport { onFilteredContacts,isLoad  } from '../../redux/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContact } from '../../redux/back-end';\n\n\nfunction ContactsList () {\n  const contacts = useSelector(onFilteredContacts);\n  const loader = useSelector(isLoad);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    !loader &&\n    contacts && (\n    <MyList>\n      {contacts.map(({ name, number, id }) => (\n        <li className=\"contact\" key={shortid.generate()}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className=\"buttonDelete\"\n            type=\"button\"\n            onClick={() => dispatch (deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </MyList>\n    )\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.array,\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactsList;\n","import ContactsForm from \"./ContactsForm/ContactsForm\";\nimport Filter from \"./Filter/Filter\";\nimport ContactsList from \"./ContactsList/ContactsList\";\n\n\nexport default function App() {\n\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactsForm/>\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList/>\n    </div>\n  );\n}\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport { fetchContact, addContact, deleteContact } from \"./back-end\";\r\nimport { filterContact } from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContact.fulfilled]: (_, action) => action.payload,\r\n  [addContact.fulfilled]: (state, action) => [action.payload, ...state],\r\n  [deleteContact.fulfilled]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContact.fulfilled]: () => false,\r\n  [fetchContact.pending]: () => true,\r\n  [fetchContact.rejected]: () => false,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterContact]: (_, action) => action.payload,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  items,\r\n  loading,\r\n  error,\r\n  filter,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: rootReducer },\r\n  devTools: true,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App.jsx\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}